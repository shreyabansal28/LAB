Machine Learning (CSPC-41)
Lab - 2
(14/08/2023)
By: Yash Mittal (12012002) and Rahul Shrimali (12012008)


Q.3 Page 93
from scipy import stats
# the distribution follows exponential distribution
# Probability that the system will fail before 85 hours, scale = 1/lamda = mean
probab = stats.expon.cdf( 85,loc = 1/1000,scale = 85)
print("Probability that system fails before 85 hrs: ", probab)

#Probability that it will not fail upto 150 hrs
p2 = 1 - stats.expon.cdf(150, loc = 1/1000, scale = 85)
print("Probability that system will not fail upto 150 hrs: ", p2)


Ques.4 Pg. 93 ..

from scipy import stats
## we are given mean = 38, std = 5

## a. spraying more than 50L in a week --> [1 - (<=50)]



lessThan50 = stats.norm.cdf(50, loc=38, scale=5)
ansPartA = 1 - lessThan50

print("Farmers spraying more than 50L of pesticide per week is: ", ansPartA)

## b. Proportion of famers spraying less than 10L


lessThan10=stats.norm.cdf(10, loc=38, scale=5)

print("Proportion of farmers spraying less than 10L of pesticide per week is: ", lessThan10)

## c. Proportion of farmers spraying between 30L to 60L


lessThan60 = stats.norm.cdf(60, loc=38, scale=5)
lessThan30 = stats.norm.cdf(30, loc=38, scale=5)

ansPartC = lessThan60-lessThan30

print("Proportion of farmers spraying between 30L to 60L of pesticide per week is: ", ansPartC)


Q.5 Page 93
from scipy import stats
import math 

#defining the function for z -test
def z_test_calc(pop_mean, pop_std, sample_mean, sample_size) :
    z_score = (sample_mean - pop_mean)/(pop_std/math.sqrt(sample_size))
    return z_score, stats.norm.cdf(z_score)

#According to question
population_mean = 5000
sample_size = 60
sample_mean = 4998.1
population_deviation = 1.3
alpha = 0.05

# Let the hypothesis be
# H0(null hypothesis) = population mean is atleast 5000, mu >= 5000
# H1 = population mean is less than 5000

# left tailed z test
z_score, p_value = z_test_calc(population_mean, population_deviation, sample_mean, sample_size)
print("z_value and p value of the data is : ", z_score, " , ", p_value)

print("As the p value is less than 0.05 and z value is also less than -1.64 then the null hypothesis is failed ")
print("Hence the population mean is less than 5 Litres")


Ques.6 Pg. 93 

from scipy import stats
import numpy as np
import pandas as pd

## The given ques will be solved by one sample t-test, since we don't know the populationstd dev 
## and there is one sample given

## sample size = 100
## sample defects = 22
## alpha = 0.05
## H0 = defects <= 18%


desired_mean=22

random_values = np.random.randn(100)

# Calculate the current mean of the generated values
current_mean = np.mean(random_values)

# Shift the random values to achieve the desired mean
shifted_values = random_values + (desired_mean - current_mean)

print("The sample is ", shifted_values)

test_res = stats.ttest_1samp(shifted_values,0.18)
print("Test result are : ", test_res)
